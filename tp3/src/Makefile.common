# Default vars
ifeq ($(EXE),)
	EXE := $(notdir $(shell pwd))
endif
ifeq ($(OBJS),)
	OBJS := $(EXE).o
endif
ifeq ($(OBJSDIR),)
	OBJSDIR=OBJS
endif
ifeq ($(CC),)
	CC=g++
endif
ifeq ($(CC),g++-4.6)
	C11_FLAG=c++0x
else
	C11_FLAG=c++11
endif
#CC=g++ # setear CC manualmente con "setenv CC ..."
CFLAGS=-Wall -pedantic -std=$(C11_FLAG)
COMMON_DIR=../common
COMMON_OBJSDIR=${COMMON_DIR}/${OBJSDIR}
# Replace OBJS with OBJSDIR/OBJS
OBJS := $(addprefix ${OBJSDIR}/,${OBJS})
COMMON_OBJS := $(addprefix ${COMMON_OBJSDIR}/,$(addsuffix .o,${COMMON_OBJS}))

#test:
#	echo $(COMMON_OBJSDIR)
#	echo $(COMMON_OBJS)

.PHONY: all clean
all: $(EXE)

$(EXE): $(OBJS) $(COMMON_OBJS)
	$(CC) $(CFLAGS) $(OBJS) $(COMMON_OBJS) -o $@

# Directorios de output
$(OBJSDIR):
	mkdir -p $(OBJSDIR)
$(COMMON_OBJSDIR):
	mkdir -p $(COMMON_OBJSDIR)
#$(OBJSDIR)/%.o: %.cpp %.h | $(OBJSDIR)
$(OBJSDIR)/%.o: %.cpp | $(OBJSDIR)
	$(CC) -c $(CFLAGS) $< -o $@
#$(COMMON_OBJSDIR)/%.o: $(COMMON_DIR)/%.cpp $(COMMON_DIR)/%.h | $(COMMON_OBJSDIR)
$(COMMON_OBJSDIR)/%.o: $(COMMON_DIR)/%.cpp | $(COMMON_OBJSDIR)
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -rf $(OBJS) $(COMMON_OBJS) $(EXE)
	#rm -rf $(COMMON_OBJSDIR)
